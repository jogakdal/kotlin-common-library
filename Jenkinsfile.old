def BUILD_DOCKER_IMAGE = 'gradle:8-jdk21'
def targetBranch = "${TARGET_BRANCH}"

pipeline {
  agent any
  stages {
    stage("validation") {
      steps {
        script {
          if(targetBranch == null || targetBranch.isEmpty()) {
            err('TARGET_BRANCH는 필수값 입니다.')
          }
        }
      }
    }
    stage("git clone") {
      steps {
        dir('kotlin-common-lib') {
          git branch:targetBranch, url:"https://${BITBUCKET_ID}:${BITBUCKET_ACCESS_KEY}@bitbucket.org/ihunet/kotlin-common-library.git"
        }
      }
    }
    stage("build") {
      steps {
        withCredentials([ usernamePassword(
                credentialsId: 'NEXUS_CRED',
                usernameVariable: 'nexusId',
                passwordVariable: 'nexusPassword') ]) {
          withDockerContainer(args: '-v /var/run/docker.sock:/var/run/docker.sock', image: BUILD_DOCKER_IMAGE, toolName: 'docker') {
            script {
              sh """
                cd kotlin-common-lib && gradle -Pprofile=${PROFILE} -Pnexus.id=${nexusId} -Pnexus.password=${nexusPassword} publish
            """
            }
          }
        }
      }
    }
  }

  post {
    success {
      script {
        echo 'Build Success'
      }
    }
    failure {
        emailext (
            to:'sol_dev@hunet.co.kr'
            , mimeType: 'text/html'
            , body: """
        <p>${env.BUILD_RESULT}:job '${env.JOB_NAME}[${env.BUILD_NUMBER}]'</p>
        <p>Check console logs;<a href='${env.BUILD_URL}'>${env.JOB_NAME}[${env.BUILD_NUMBER}]'</a>&QUOT;</p>
        """
            , subject: """
        'jenkins Build Result: job name: ${env.JOB_NAME}'
        """
        )
    }
    always {
      echo 'Build END'
    }
  }
}

private def note(String msg) {
  Date nowDate = new Date()
  def date = nowDate.format("yyyy-MM-dd HH:mm:ss.SSS")
  return "${date} ${msg}"
}

/**
 * 에러 레벨 메시지 출력 후 종료
 * @param msg 에러 메시지
 */
def err(msg) {
  error("🆘 ${note(msg)}" )
}
